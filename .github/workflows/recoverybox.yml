###########################################################
#   Description: Compile recoverybox by GitHub Actions      #
#   Based on:  openwrt19.07.10                              #
#   Author: Teasiu                                        #
###########################################################

name: autobox

on:
  repository_dispatch:
  workflow_dispatch:
  push:
    branches: 
      - main

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 180

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -y update
        sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo -E apt-get -y install $(curl -fsSL https://tinyurl.com/ubuntu2204-make-openwrt)
        sudo -E apt-get -y install git build-essential libssl-dev autoconf automake libtool
        sudo -E systemctl daemon-reload
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo timedatectl set-timezone "Asia/Shanghai"
        if [ $? -ne 0 ]; then
          echo "依赖安装失败"
          exit 1
        fi

    - name: Build and install make_ext4fs
      run: |
        git clone https://github.com/openwrt/make_ext4fs
        cd make_ext4fs
        make
        sudo cp make_ext4fs /usr/local/bin/
        sudo chmod +x /usr/local/bin/make_ext4fs
        cd -

    - name: Build 64bit & 32bit recoverybox
      run: |
        ./scripts/feeds update -a || { echo "feeds更新失败"; exit 1; }
        ./scripts/feeds install -a > /dev/null 2>&1 || { echo "feeds安装失败"; exit 1; }
        cd feeds/luci
        cat ../../0001-chgindex.patch | patch -p1
        cd -
        cp recoverybox64.config .config
        make defconfig || { echo "64位defconfig失败"; exit 1; }
        make -j$(($(nproc)/2)) || { echo "64位编译失败"; exit 1; }
        make_ext4fs -l 64M -s bin/recoverybox64.ext4 build_dir/target-aarch64_generic_musl/root-armvirt
        cp bin/targets/armvirt/64/openwrt-armvirt-64-root.ext4.gz bin/ || { echo "64位文件复制失败"; exit 1; }
        make clean || { echo "清理失败"; exit 1; }
        

        cp recoverybox32.config .config
        make defconfig || { echo "32位defconfig失败"; exit 1; }
        make -j$(($(nproc)/2)) || { echo "32位编译失败"; exit 1; }
        make_ext4fs -l 64M -s bin/recoverybox32.ext4 build_dir/target-arm_cortex-a15+neon-vfpv4_musl_eabi/root-armvirt
        cp bin/targets/armvirt/32/openwrt-armvirt-32-root.ext4.gz bin/ || { echo "32位文件复制失败"; exit 1; }

    - name: Generate release tag
      id: tag
      run: |
        release_tag=$(date +"%Y.%m.%d-%H%M")
        # 使用新的环境文件方式设置输出，替代已弃用的 set-output
        echo "release_tag=$release_tag" >> $GITHUB_OUTPUT
        cat > release.txt << EOF
        自动构建于: $(date +"%Y-%m-%d %H:%M:%S")
        基于版本: openwrt19.07.10
        
        包含文件:
        🔗 recoverybox32.ext4 (32位版本)
        🔗 recoverybox64.ext4 (64位版本)
        🔗 openwrt-armvirt-32-root.ext4.gz
        🔗 openwrt-armvirt-64-root.ext4.gz
        EOF
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v2
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: |
          bin/*.ext4
          bin/*.gz
        draft: false
        prerelease: false

    - name: Delete old workflow runs
      uses: GitRML/delete-workflow-runs@v1
      with:
        retain_days: 1
        keep_minimum_runs: 3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Remove old releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
